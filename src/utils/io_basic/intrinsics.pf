@test
subroutine test_intrinsics()
  use funit
  
  use caesar_precision_module
  use caesar_string_module
  use caesar_print_settings_module
  use caesar_intrinsics_module
  implicit none
  
  call unset_print_settings()
  
  ! Test str.
  @assertTrue(str(.false.)=='F')
  @assertTrue(str(.true.)=='T')
  @assertTrue(str(3)=='3')
  @assertTrue(str(-1)=='-1')
  call set_print_settings(decimal_places=2)
  @assertTrue(str(1.2345e2_dp)==' 1.23E+002')
  @assertTrue(str(1.2345e-2_dp)==' 1.23E-002')
  @assertTrue(str(-1.2345e2_dp)=='-1.23E+002')
  @assertTrue(str(-1.2345e-2_dp)=='-1.23E-002')
  @assertTrue(str(1.2345e200_dp)==' 1.23E+200')
  @assertTrue(str(1.2345e-200_dp)==' 1.23E-200')
  @assertTrue(str((1.23_dp,1.23_dp))==' 1.23E+000+1.23E+000i')
  @assertTrue(str((1.23_dp,-1.23_dp))==' 1.23E+000-1.23E+000i')
  @assertTrue(str((-1.23_dp,1.23_dp))=='-1.23E+000+1.23E+000i')
  @assertTrue(str((-1.23_dp,-1.23_dp))=='-1.23E+000-1.23E+000i')
  call set_print_settings(floating_point_format='f', integer_digits=3)
  @assertTrue(str(1.2345e2_dp)==' 123.45')
  @assertTrue(str(1.2345e-2_dp)=='   0.01')
  @assertTrue(str(-1.2345e2_dp)=='-123.45')
  @assertTrue(str(-1.2345e-2_dp)=='  -0.01')
  @assertTrue(str(1.2345e200_dp)=='*******')
  @assertTrue(str(1.2345e-200_dp)=='   0.00')
  @assertTrue(str((1.23_dp,1.23_dp))=='   1.23+001.23i')
  @assertTrue(str((1.23_dp,-1.23_dp))=='   1.23-001.23i')
  @assertTrue(str((-1.23_dp,1.23_dp))=='  -1.23+001.23i')
  @assertTrue(str((-1.23_dp,-1.23_dp))=='  -1.23-001.23i')
  call unset_print_settings()
  
  ! Test left_pad.
  @assertTrue(left_pad(1,'1234')=='0001')
  @assertTrue(left_pad(1,'1234',' ')=='   1')
  @assertTrue(left_pad(1,str('1234'))=='0001')
  @assertTrue(left_pad(1,str('1234'),' ')=='   1')
  
  ! Test join.
  @assertTrue(join([logical::])=='')
  @assertTrue(join([integer::])=='')
  @assertTrue(join([real(dp)::])=='')
  @assertTrue(join([complex(dp)::])=='')
  @assertTrue(join([.true.,.false.])=='T F')
  @assertTrue(join([.true.,.false.],',')=='T,F')
  @assertTrue(join([1,2,3],',')==' 1, 2, 3')
  @assertTrue(join([1,2,3],pad_sign=.false.)=='1 2 3')
  
  ! Test lgcl.
  @assertTrue(lgcl('T'))
  @assertTrue(lgcl('t'))
  @assertTrue(lgcl('True'))
  @assertTrue(lgcl('true'))
  @assertTrue(lgcl(str(.true.)))
  @assertTrue(lgcl(' T '))
  @assertFalse(lgcl('F'))
  @assertFalse(lgcl('f'))
  @assertFalse(lgcl('False'))
  @assertFalse(lgcl('false'))
  @assertFalse(lgcl(str(.false.)))
  @assertFalse(lgcl(' F '))
  
  ! Test int.
  @assertTrue(int('12')==12)
  @assertTrue(int(str(12))==12)
  @assertTrue(int('-12')==-12)
  @assertTrue(int(' 12 ')==12)
  
  ! Test dble.
  @assertTrue(abs(dble('12')-12._dp)<1e-10_dp)
  @assertTrue(abs(dble('12E0')-12._dp)<1e-10_dp)
  @assertTrue(abs(dble('12e0')-12._dp)<1e-10_dp)
  @assertTrue(abs(dble('12e+0')-12._dp)<1e-10_dp)
  @assertTrue(abs(dble('12e-0')-12._dp)<1e-10_dp)
  @assertTrue(abs(dble(str(12._dp))-12._dp)<1e-10_dp)
  call set_print_settings(decimal_places=3)
  @assertTrue(abs(dble(str(12._dp))-12._dp)<1e-10_dp)
  call set_print_settings(floating_point_format='f',integer_digits=3)
  @assertTrue(abs(dble(str(12._dp))-12._dp)<1e-10_dp)
  call unset_print_settings()
  @assertTrue(abs(dble('-12')+12._dp)<1e-10_dp)
  @assertTrue(abs(dble('1.2e300')-1.2e300_dp)<1e290_dp)
  @assertTrue(abs(dble('1.2e-300')-1.2e-300_dp)<1e-310_dp)
  @assertTrue(abs(dble('-1.2e300')+1.2e300_dp)<1e290_dp)
  @assertTrue(abs(dble('-1.2e-300')+1.2e-300_dp)<1e-310_dp)
  @assertTrue(abs(dble('4/5')-0.8_dp)<1e-10_dp)
  @assertTrue(abs(dble('1.2e1/-2.4e-1')+50._dp)<1e-10_dp)
  
  ! Test cmplx.
  @assertTrue(abs(cmplx('1.2+1.2i')-(1.2_dp,1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2-1.2i')-(1.2_dp,-1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2+1.2i')-(-1.2_dp,1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2-1.2i')-(-1.2_dp,-1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2')-(1.2_dp,0.0_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2')-(-1.2_dp,0.0_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2i')-(0.0_dp,1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2i')-(0.0_dp,-1.2_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e3+1.2e3i')-(1.2e3_dp,1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e+3+1.2e3i')-(1.2e3_dp,1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e3+1.2e+3i')-(1.2e3_dp,1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e+3+1.2e+3i')-(1.2e3_dp,1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e-3+1.2e-3i')-(1.2e-3_dp,1.2e-3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2e+3-1.2e+3i')-(-1.2e3_dp,-1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2e-3-1.2e-3i')-(-1.2e-3_dp,-1.2e-3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e3')-(1.2e3_dp,0.0_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2e3')-(-1.2e3_dp,0.0_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('1.2e3i')-(0.0_dp,1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx('-1.2e3i')-(0.0_dp,-1.2e3_dp))<1e-10_dp)
  @assertTrue(abs(cmplx(str((1.2e3_dp,1.2e3_dp)))-(1.2e3_dp,1.2e3_dp))<1e-10_dp)
  
  ! Test concatenation (//).
  @assertTrue('Hello '//.true.=='Hello T')
  @assertTrue(.true.//' Hello'=='T Hello')
  @assertTrue(str('Hello ')//.true.=='Hello T')
  @assertTrue(.true.//str(' Hello')=='T Hello')
  @asserttrue('Hello '//3=='Hello 3')
  @asserttrue(3//' Hello'=='3 Hello')
  @asserttrue(str('Hello ')//3=='Hello 3')
  @asserttrue(3//str(' Hello')=='3 Hello')
  call set_print_settings(decimal_places=3)
  @assertTrue('Hello '//1.2_dp=='Hello  1.200E+000')
  @assertTrue(1.2_dp//' Hello'==' 1.200E+000 Hello')
  @assertTrue(str('Hello ')//1.2_dp=='Hello  1.200E+000')
  @assertTrue(1.2_dp//str(' Hello')==' 1.200E+000 Hello')
  @asserttrue('Hello '//(1.2_dp,1.2_dp)=='Hello  1.200E+000+1.200E+000i')
  @asserttrue((1.2_dp,1.2_dp)//' Hello'==' 1.200E+000+1.200E+000i Hello')
  @asserttrue(str('Hello ')//(1.2_dp,1.2_dp)=='Hello  1.200E+000+1.200E+000i')
  @asserttrue((1.2_dp,1.2_dp)//str(' Hello')==' 1.200E+000+1.200E+000i Hello')
  call unset_print_settings()
end subroutine
