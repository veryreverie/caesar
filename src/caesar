#!/bin/bash

# ======================================================================
# Main caesar script.
# ======================================================================
function main {
  if [ "$arg" = "run_harmonic" ]; then
    run_harmonic
  elif [  "$arg" = "run_quadratic" ]; then
    run_quadratic
  else
    # Anything not handled by this script is passed to .caesar
    .caesar $@
  fi
}

# ======================================================================
# Script to run harmonic calculation on TCM cluster.
# ======================================================================
# Can also be used to copy the results of previous harmonic runs.
# This should only be used for unit testing.
function run_harmonic {
  # Read in user inputs.
  echo "What is the first supercell to run?"
  read first_sc
  echo "What is the last supercell to run?"
  read last_sc
  echo "How many cores per run?"
  read num_cores
  echo "What is the path to the script for running DFT?"
  read run_script

  # Read code and seedname
  code=$( awk 'NR==1 {print}' user_input.txt )
  seedname=$( awk 'NR==2 {print}' user_input.txt )

  # Loop over supercells
  for i in `seq $first_sc $last_sc`; do
    sdir=Supercell_$i 

    # Loop over atoms to be displaced.
    j=0
    while read fline; do
      line=($fline)
      atom=${line[0]}
      xy_symmetry=${line[1]}
      xz_symmetry=${line[2]}
      yz_symmetry=${line[3]}
      directions=('x')
      if [ "$xy_symmetry" = "0" ]; then
        directions+=' y'
      fi
      if [ "$xz_symmetry" = "0" ] && [ "$yz_symmetry" = "0" ]; then
        directions+=' z'
      fi
      for direction in ${directions[@]}; do
        signs=(+ -)
        for sign in ${signs[@]}; do
          dir=$sdir/atom.$atom.${sign}d$direction
          echo "Working in directory:"
          echo $dir
          $run_script $code $ddir $num_cores $seedname
        done
      done
    done < $sdir/unique_directions.dat 
  done
  echo "Done."
}

# ======================================================================
# Script to run quadratic calculation on TCM cluster.
# ======================================================================
function run_quadratic {
  # Read in user inputs
  echo "What is the first supercell to run?"
  read first_sc
  echo "What is the last supercell to run?"
  read last_sc
  echo "How many cores per run?"
  read num_cores
  echo "What is the path to the script for running DFT?"
  read run_script

  # Read in previous user inputs
  dft_code=$( awk 'NR==1 {print}' user_input.txt )
  seedname=$( awk 'NR==2 {print}' user_input.txt )
  harmonic_path=$( awk 'NR==3 {print}' user_input.txt )

  # Read in mapping file
  sampling_amplitude=$( awk 'NR==1 {print $1}' mapping.dat)
  sampling_point_init=$( awk 'NR==2 {print $1}' mapping.dat)
  sampling_point_final=$( awk 'NR==2 {print $2}' mapping.dat)
  no_sampling_points=$(( $sampling_point_final-$sampling_point_init ))

  # Read in structure file
  atoms_line=$(awk -v IGNORECASE=1 '$1~/Atoms/{print NR}' \
     $harmonic_path/structure.dat)
  symmetry_line=$(awk -v IGNORECASE=1 '$1~/Lattice/{print NR}' \
     $harmonic_path/structure.dat)
  no_atoms=$($symmetry_line-$atoms_line-1)
  no_modes=$(( $no_atoms*3 ))

  # Loop over supercells
  for sc_id in `seq $first_sc $last_sc`; do
    sdir=Supercell_$sc_id

    # Run static dft
    static_dir=$sdir/static
    echo $static_dir
    $run_script $dft_code $static_dir $num_cores $seedname
  done

  # loop over kpoints
  i=0
  while read fline ; do
    
    # Skip the first line.
    if ["$i" = "0"]; then
      ((i++))
      continue
    fi
    
    line=($fline)
    sc_id=${line[4]}
    
    # Skip kpoints in other supercells
    if ["$sc_id" -ge "$first_sc"] && ["$sc_id" -le "$last_sc"]; then
      # Loop over modes
      for j in `seq 1 $no_modes`; do
        # Loop over sampling points
        for k in `seq $sampling_point_init $sampling_point_final`; do
          mdir=kpoint_$i/mode_$j/amplitude_$k
          # Check that dft needs to be run
          if [ -e "$mdir/structure.dat" ]; then
            # Run dft
            echo $mdir
            $run_script $dft_code $mdir $num_cores $seedname
          fi
        done
      done
    fi
    
    ((i++))
  done < $harmonic_path/kpoints_ibz.dat
  echo "Done."
}

main $@
