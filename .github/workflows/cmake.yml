name: CMake

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install build deps
      # Grab external packages needed to build Caesar
      run: |
        sudo apt install gfortran liblapack-dev libblas-dev
    
    - name: Install pFUnit
      working-directory: ${{github.workspace}}
      run: |
        git clone https://github.com/Goddard-Fortran-Ecosystem/pFUnit.git pfunit
    
    - name: Make pFUnit build dir
      run: |
        cmake -E make_directory ${{github.workspace}}/pfunit/build
    
    - name: Make pFUnit
      working-directory: ${{github.workspace}}/pfunit/build
      run: |
        cmake .. \
          -DSKIP_MPI:logical=true \
          -DSKIP_OPENMP:logical=true \
          -DSKIP_FHAMCREST:logical=true \
          -DSKIP_ESMF:logical=true
        make tests
        make install

    - name: Make Caesar build dir
      run: |
        cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        pfunit_flags=""
        for pfunit_lib in PFUNIT GFTL GFTL_SHARED; do
          pfunit_dir=$(find ${{github.workspace}}/pfunit/build/installed \
            -name "${pfunit_lib}Config.cmake" | xargs -I{} dirname {})
          pfunit_flags="${pfunit_flags} -D${pfunit_lib}_DIR:path=${pfunit_dir}"
        done
        cmake $GITHUB_WORKSPACE/src \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          $pfunit_flags \
          -DCORRECT_COUNTER_BUG:logical=true

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.
      # You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
